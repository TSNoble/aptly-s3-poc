---
name: Deploy to AWS

on:
  workflow_dispatch:
    inputs:
      update-secrets:
        required: true
        type: boolean
        description: "Update secrets after deploying."
      deploy-domain:
        required: true
        type: boolean
        default: true
        description: "Deploy repository domain."
  workflow_call:
    inputs:
      update-secrets:
        required: true
        type: boolean
        description: "Update secrets after deploying."
      deploy-domain:
        required: true
        type: boolean
        description: "Deploy repository domain."
    outputs:
      aws-aptly-bucket-name:
        description: "The name of the S3 bucket hosting Aptly packages and the public key."
        value: ${{ jobs.deploy-to-aws.outputs.aws-aptly-bucket-name }}
      aws-aptly-publisher-role-arn:
        description: "The ARN of the role allowed to publish Aptly packages to the S3 bucket."
        value: ${{ jobs.deploy-to-aws.outputs.aws-aptly-publisher-role-arn }}
      aws-aptly-key-manager-role-arn:
        description: "The ARN of the role allowed to write a new public key to the S3 bucket."
        value: ${{ jobs.deploy-to-aws.outputs.aws-aptly-key-manager-role-arn }}
      
jobs:
  deploy-to-aws:
    runs-on: ubuntu-latest
    environment: Deployment
    env:
      AWS_GITHUB_PROVIDER_ARN: ${{ secrets.AWS_GITHUB_PROVIDER_ARN }}
    permissions:
      id-token: write
      contents: read
    outputs:
      aws-aptly-bucket-name: ${{ steps.cdk.outputs.aws-aptly-bucket-name }}
      aws-aptly_publisher-role-arn: ${{ steps.cdk.outputs.aws-aptly-publisher-role_arn }}
      aws-aptly-key-manager-role-arn: ${{ steps.cdk.outputs.aws-aptly-key-manager-role-arn }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: |
          sudo apt-get install -y jq
          npm install -g aws-cdk
          pip3 install -r requirements.txt
          pip3 install -r requirements-dev.txt
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-session-name: GithubRunnerDeployment
      - name: Bootstrap environment
        run: cdk bootstrap
      - name: Synthesize stacks
        run: cdk synth
      - name: Deploy repository stack
        id: cdk
        run: |
          export CDK_STACK_NAME="${{ env.GITHUB_REF }}AptlyRepositoryStack"
          cdk deploy --require-approval never $CDK_STACK_NAME --outputs-file /tmp/cdk-outputs.json
          echo "aws-aptly-bucket-name=$(cat /tmp/cdk-outputs.json | jq -r .$CDK_STACK_NAME.BucketName)" >> $GITHUB_OUTPUT
          echo "aws-aptly-publisher-role-arn=$(cat /tmp/cdk-outputs.json | jq -r .$CDK_STACK_NAME.PublisherRoleArn)" >> $GITHUB_OUTPUT
          echo "aws-aptly-key_manager-role-arn=$(cat /tmp/cdk-outputs.json | jq -r .$CDK_STACK_NAME.KeyManagerRoleArn)" >> $GITHUB_OUTPUT
      - name: Deploy domain stack
        if: ${{ github.events.inputs.deploy-domain }}
        run: cdk deploy --require-approval never AptlyDomainStack
      - name: Update bucket secret (KeyRotation)
        if: ${{ github.events.inputs.update-secrets }}
        run: >
          invoke create-github-secret
          --repo ${{ github.repository_id }}
          --environment KeyRotation
          --token ${{ secrets.REPOSITORY_PAT }}
          --name AWS_APTLY_BUCKET_NAME
          --value ${{ steps.cdk.outputs.aws-aptly-bucket-name }}
      - name: Update key manager role secret
        if: ${{ github.events.inputs.update-secrets }}
        run: >
          invoke create-github-secret
          --repo ${{ github.repository_id }}
          --environment KeyRotation
          --token ${{ secrets.REPOSITORY_PAT }}
          --name AWS_APTLY_KEY_MANAGER_ROLE_ARN
          --value ${{ steps.cdk.outputs.aws-aptly-key-manager-role-arn }}
      - name: Update bucket secret (Publish)
        if: ${{ github.events.inputs.update-secrets }}
        run: >
          invoke create-github-secret
          --repo ${{ github.repository_id }}
          --environment Publish
          --token ${{ secrets.REPOSITORY_PAT }}
          --name AWS_APTLY_BUCKET_NAME
          --value ${{ steps.cdk.outputs.aws-aptly-bucket-name }}
      - name: Update publisher role secret
        if: ${{ github.events.inputs.update-secrets }}
        run: >
          invoke create-github-secret
          --repo ${{ github.repository_id }}
          --environment Publish
          --token ${{ secrets.REPOSITORY_PAT }}
          --name AWS_APTLY_PUBLISHER_ROLE_ARN
          --value ${{ steps.cdk.outputs.aws-aptly-publisher-role-arn }}
      
