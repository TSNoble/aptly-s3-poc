---
name: Deploy to AWS

on:
  workflow_dispatch:
    inputs:
      deploy-domain:
        required: true
        type: boolean
        default: true
        description: "Deploy repository domain."
      add-branch-suffix:
        required: true
        type: boolean
        default: false
        description: "Add branch hash as stack suffix."

  workflow_call:
    inputs:
      deploy-domain:
        required: true
        type: boolean
        description: "Deploy repository domain."
      add-branch-suffix:
        required: true
        type: boolean
        description: "Add branch hash as stack suffix."
    outputs:
      aws-aptly-bucket-name:
        description: "The name of the S3 bucket hosting Aptly packages and the public key."
        value: ${{ jobs.deploy-to-aws.outputs.aws-aptly-bucket-name }}
      aws-aptly-publisher-role-arn:
        description: "The ARN of the role allowed to publish Aptly packages to the S3 bucket."
        value: ${{ jobs.deploy-to-aws.outputs.aws-aptly-publisher-role-arn }}
      aws-aptly-key-manager-role-arn:
        description: "The ARN of the role allowed to write a new public key to the S3 bucket."
        value: ${{ jobs.deploy-to-aws.outputs.aws-aptly-key-manager-role-arn }}
      
jobs:
  deploy-to-aws:
    runs-on: ubuntu-latest
    environment: Deployment
    env:
      AWS_GITHUB_PROVIDER_ARN: ${{ secrets.AWS_GITHUB_PROVIDER_ARN }}
    permissions:
      id-token: write
      contents: read
    outputs:
      aws-aptly-bucket-name: ${{ steps.cdk.outputs.aws-aptly-bucket-name }}
      aws-aptly_publisher-role-arn: ${{ steps.cdk.outputs.aws-aptly-publisher-role_arn }}
      aws-aptly-key-manager-role-arn: ${{ steps.cdk.outputs.aws-aptly-key-manager-role-arn }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: |
          echo ADD-BRANCH-SUFFIX=${{ github.events.inputs.add-branch-suffix }}
          sudo apt-get install -y jq
          npm install
          pip3 install -r requirements.txt
          pip3 install -r requirements-dev.txt
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-session-name: GithubRunnerDeployment
      - name: Set stack suffix
        if: ${{ github.events.inputs.add-branch-suffix == 'true' }}
        run: echo "STACK_SUFFIX=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Synthesize stacks
        run: npx cdk synth
      - name: Deploy repository stack
        id: cdk
        run: |
          export CDK_STACK_NAME=AptlyRepositoryStack${STACK_SUFFIX}
          npx cdk deploy --require-approval never ${CDK_STACK_NAME} --outputs-file /tmp/cdk-outputs.json
          echo "aws-aptly-bucket-name=$(cat /tmp/cdk-outputs.json | jq -r .${CDK_STACK_NAME}.BucketName)" >> $GITHUB_OUTPUT
          echo "aws-aptly-publisher-role-arn=$(cat /tmp/cdk-outputs.json | jq -r .${CDK_STACK_NAME}.PublisherRoleArn)" >> $GITHUB_OUTPUT
          echo "aws-aptly-key_manager-role-arn=$(cat /tmp/cdk-outputs.json | jq -r .${CDK_STACK_NAME}.KeyManagerRoleArn)" >> $GITHUB_OUTPUT
          echo $(cat /tmp/cdk-outputs.json | jq -r .${CDK_STACK_NAME}.BucketName)
      - name: Deploy domain stack
        if: ${{ github.events.inputs.deploy-domain == 'true' }}
        run: npx cdk deploy --require-approval never AptlyDomainStack${STACK_SUFFIX}
      
